p <- p + geom_line(aes(y=pdelR[1,3],col=color[1]))
p <- p + geom_line(aes(y=pdelR[1,4],col=color[1]))
}
return(p)
}
par(mfrow=c(4,6),mai=c(0.1,0.2,0.1,0.1))
for (i in 1:22) {
print(plotVbtStates(vtbStates[vtbStates$Chr == i,],delReg))
}
dev.off()
pdf(output)
par(mfrow=c(4,6),mai=c(0.1,0.2,0.1,0.1))
for (i in 1:22) {
print(plotVbtStates(vtbStates[vtbStates$Chr == i,],delReg))
}
dev.off()
plotVbtStates <- function(vtbStates,delReg) {
reg <- read.delim(delReg)
pdelR <- reg[which(reg$CHR == unique(vtbStates[,1])),]
output <- paste(act.num,"_CNV_viterbi.pdf",sep="")
require(ggplot2)
mytitle <- paste("CHR",unique(vtbStates[,1]),sep="")
maxPos <- as.numeric(max(vtbStates$Pos))
p <- ggplot(vtbStates,aes(x=Pos)) + geom_line(aes(y=State))
+ scale_x_continuous(limits=c(1,maxPos))
+ opts(title=expression(paste("CHR",unique(vtbStates[,1]),sep="")))
+ xlab("Pos") + ylab("States")
color <- c("red","green","blue","pink","orange")
if(nrow(pdelR) > 1) {
for (i in 1:nrow(pdelR)){
p <- p + geom_line(aes(y=pdelR[i,3],color=color[i]))
p <- p + geom_line(aes(y=pdelR[i,4],color=color[i]))
}
}else if(nrow(pdelR) == 1){
p <- p + geom_line(aes(y=pdelR[1,3],color=color[1]))
p <- p + geom_line(aes(y=pdelR[1,4],color=color[1]))
}
return(p)
}
pdf(output)
par(mfrow=c(4,6),mai=c(0.1,0.2,0.1,0.1))
for (i in 1:22) {
print(plotVbtStates(vtbStates[vtbStates$Chr == i,],delReg))
}
dev.off()
plotVbtStates <- function(vtbStates,delReg) {
reg <- read.delim(delReg)
pdelR <- reg[which(reg$CHR == unique(vtbStates[,1])),]
output <- paste(act.num,"_CNV_viterbi.pdf",sep="")
require(ggplot2)
mytitle <- paste("CHR",unique(vtbStates[,1]),sep="")
maxPos <- as.numeric(max(vtbStates$Pos))
p <- ggplot(vtbStates,aes(x=Pos)) + geom_line(aes(y=State))
+ scale_x_continuous(limits=c(1,maxPos))
+ opts(title=expression(paste("CHR",unique(vtbStates[,1]),sep="")))
+ xlab("Pos") + ylab("States")
colors <- c("red","green","blue","pink","orange")
if(nrow(pdelR) > 1) {
for (i in 1:nrow(pdelR)){
p <- p + geom_line(aes(y=pdelR[i,3],color=colors[i]))
p <- p + geom_line(aes(y=pdelR[i,4],color=colors[i]))
}
}else if(nrow(pdelR) == 1){
p <- p + geom_line(aes(y=pdelR[1,3],color=colors[1]))
p <- p + geom_line(aes(y=pdelR[1,4],color=colors[1]))
}
return(p)
}
pdf(output)
par(mfrow=c(4,6),mai=c(0.1,0.2,0.1,0.1))
for (i in 1:22) {
print(plotVbtStates(vtbStates[vtbStates$Chr == i,],delReg))
}
dev.off()
getwd()
plotVbtStates <- function(vtbStates,delReg) {
reg <- read.delim(delReg)
pdelR <- reg[which(reg$CHR == unique(vtbStates[,1])),]
output <- paste(act.num,"_CNV_viterbi.pdf",sep="")
require(ggplot2)
mytitle <- paste("CHR",unique(vtbStates[,1]),sep="")
maxPos <- as.numeric(max(vtbStates$Pos))
plot(vtbStates$Pos,vtbStates$State,type="l"
, xlim=c(1,maxPos)
,main=paste("CHR",unique(vtbStates[,1]),sep="")
, xlab= "Pos", ylab="States")
colors <- c("red","green","blue","pink","orange")
if(nrow(pdelR) > 1) {
for (i in 1:nrow(pdelR)){
abline(v=pdelR[i,3],col=colors[i])
abline(v=pdelR[i,4],col=colors[i])
}
}else if(nrow(pdelR) == 1){
abline(v=pdelR[1,3],col=colors[1])
abline(v=pdelR[1,4],col=colors[1])
}
}
par(mfrow=c(4,6),mai=c(0.1,0.2,0.1,0.1))
for (i in 1:22) {
print(plotVbtStates(vtbStates[vtbStates$Chr == i,],delReg))
}
plotVbtStates <- function(vtbStates,delReg) {
reg <- read.delim(delReg)
pdelR <- reg[which(reg$CHR == unique(vtbStates[,1])),]
output <- paste(act.num,"_CNV_viterbi.pdf",sep="")
require(ggplot2)
mytitle <- paste("CHR",unique(vtbStates[,1]),sep="")
maxPos <- as.numeric(max(vtbStates$Pos))
plot(vtbStates$Pos,vtbStates$State,type="l"
, xlim=c(1,maxPos)
,main=paste("CHR",unique(vtbStates[,1]),sep="")
, xlab="",ylab="",xaxt="n",yaxt="n")
colors <- c("red","green","blue","pink","orange")
if(nrow(pdelR) > 1) {
for (i in 1:nrow(pdelR)){
abline(v=pdelR[i,3],col=colors[i])
abline(v=pdelR[i,4],col=colors[i])
}
}else if(nrow(pdelR) == 1){
abline(v=pdelR[1,3],col=colors[1])
abline(v=pdelR[1,4],col=colors[1])
}
}
par(mfrow=c(4,6),mai=c(0.1,0.3,0.3,0.1))
for (i in 1:22) {
print(plotVbtStates(vtbStates[vtbStates$Chr == i,],delReg))
}
?text
plot(1:5,type="n")
text(5,5,"TEST")
plot(1:10,type="n", )
text(5,5,"TEST")
plot(1:10,type="n" )
text(5,5,"TEST")
par(mfrow=c(4,6),mai=c(0.1,0.3,0.3,0.1))
for (i in 1:22) {
print(plotVbtStates(vtbStates[vtbStates$Chr == i,],delReg))
}
mytitle <- gsub(".pdf","",output)
plot(1:10,type="n" )
text(5,5,mytitle)
plot(1:10,type="n",xlab="",ylab="",xaxt="n",yaxt="n")
plot(1:10,type="n",xlab="",ylab="",xaxt="n",yaxt="n",axes=F)
text(5,5,mytitle)
?text
text(5,5,mytitle,cex=5)
plot(1:10,type="n",xlab="",ylab="",xaxt="n",yaxt="n",axes=F)
text(5,5,mytitle,cex=5)
plot(1:10,type="n",xlab="",ylab="",xaxt="n",yaxt="n",axes=F)
text(5,5,mytitle,cex=3)
par(mfrow=c(4,6),mai=c(0.1,0.3,0.3,0.1))
for (i in 1:22) {
print(plotVbtStates(vtbStates[vtbStates$Chr == i,],delReg))
}
mytitle <- gsub(".pdf","",output)
plot(1:10,type="n",xlab="",ylab="",xaxt="n",yaxt="n",axes=F)
text(5,5,mytitle,cex=3)
plotVbtStates22 <- function(vtbStates,delReg.file){
library(ggplot2)
ppdata <- list()
ncol <- 6
nrow <- 4
test
output <- "test.pdf"
vtbStates <- s10
delReg <- delReg.file
pdf(output)
par(mfrow=c(4,6),mai=c(0.1,0.3,0.3,0.1))
for (i in 1:22) {
print(plotVbtStates(vtbStates[vtbStates$Chr == i,],delReg))
}
mytitle <- gsub(".pdf","",output)
plot(1:10,type="n",xlab="",ylab="",xaxt="n",yaxt="n",axes=F)
text(5,5,mytitle,cex=2)
plot(1:10,type="n",xlab="",ylab="",xaxt="n",yaxt="n",axes=F)
text(5,5,mytitle,cex=2)
dev.off()
}
plotVbtStates22 <- function(vtbStates,delReg.file,output){
library(ggplot2)
ppdata <- list()
ncol <- 6
nrow <- 4
test
output <- "test.pdf"
vtbStates <- s10
delReg <- delReg.file
pdf(output)
par(mfrow=c(4,6),mai=c(0.1,0.3,0.3,0.1))
for (i in 1:22) {
print(plotVbtStates(vtbStates[vtbStates$Chr == i,],delReg))
}
mytitle <- gsub(".pdf","",output)
plot(1:10,type="n",xlab="",ylab="",xaxt="n",yaxt="n",axes=F)
text(5,5,mytitle,cex=2)
plot(1:10,type="n",xlab="",ylab="",xaxt="n",yaxt="n",axes=F)
text(5,5,mytitle,cex=2)
dev.off()
}
plotVbtStates22(s10,delReg,"AC10_vtbCNV.pdf")
plotVbtStates22 <- function(vtbStates,delReg.file,output){
library(ggplot2)
ppdata <- list()
ncol <- 6
nrow <- 4
test
output <- "test.pdf"
vtbStates <- s10
delReg <- delReg.file
pdf(output)
par(mfrow=c(4,6),mai=c(0.1,0.3,0.3,0.1))
for (i in 1:22) {
print(plotVbtStates(vtbStates[vtbStates$Chr == i,],delReg))
}
mytitle <- gsub(".pdf","",output)
plot(1:10,type="n",xlab="",ylab="",xaxt="n",yaxt="n",axes=F)
text(5,5,unlist(strsplit(mytitle,"_"))[1],cex=1.5)
plot(1:10,type="n",xlab="",ylab="",xaxt="n",yaxt="n",axes=F)
text(5,5,unlist(strsplit(mytitle,"_"))[2],cex=1.5)
dev.off()
}
plotVbtStates22(s10,delReg,"AC10_vtbCNV.pdf")
setwd("~/Dropbox/compMethod/lab/IR Lab/")
install.packages("tm")
require(tm)
ddsum <- "dsums/"
dsum <- Corpus(DirSource(ddsum), readerControl = list(language = "en"))
dsumNew <- tm_map(dsum, stripWhitespace)
dsumNew <- tm_map(dsumNew, tolower)
db2 <- Dictionary(c("dm","dmii","db","dm2","type ii dm","diabetes","diabetes type 2","NIDDM","2"))
plavix <- Dictionary(c("plavix" , "clopidogrel","inn"))
dsumDb2MX <- DocumentTermMatrix(dsumNew, list(dictionary = db2))
resDb2 <- sort(rowSums(as.matrix(dsumDb2MX)),decreasing=T)
inspect(dsumDb2MX)
resDb2
resDb2[resDb2>0]
dsumPxMX <- DocumentTermMatrix(dsumNew, list(dictionary = plavix))
resPlavix <- sort(rowSums(as.matrix(dsumPxMX)),decreasing=T)
resPlavix[resPlavix>0]
length(resPlavix[resPlavix>0])
length(resDb2[resDb2>0])
db2 <- Dictionary(c("dm","dmii","db","dm2","type ii dm","diabetes type 2","NIDDM",
"db2.","db2,","db2:","dmii.","dmii,","dmii:","dm2,","dm2.","dm2:"))
dsumDb2MX <- DocumentTermMatrix(dsumNew, list(dictionary = db2))
resDb2 <- sort(rowSums(as.matrix(dsumDb2MX)),decreasing=T)
length(resDb2[resDb2>0])
getwd()
setwd("~/Dropbox/scripts/projNET/testCNV/")
source("myBBViterbi.r")
q()
